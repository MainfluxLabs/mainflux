openapi: 3.0.1
info:
  title: Mainflux webhooks service
  description: HTTP API for managing platform webhooks.
  version: 1.0.0

paths:
  /things/{thingId}/webhooks:
    post:
      summary: Adds new webhooks
      description: |
        Adds new webhooks to the list of webhooks for certain thing identified by the provided ID
      tags:
        - webhooks
      parameters:
        - $ref: "#/components/parameters/ThingId"
      requestBody:
        $ref: "#/components/requestBodies/CreateWebhooksReq"
      responses:
        '201':
          $ref: "#/components/responses/CreateWebhooksRes"
        '400':
          description: Failed due to malformed JSON.
        '401':
          description: Missing or invalid access token provided.
        '403':
          description: Failed to perform authorization over the entity
        '415':
          description: Missing or invalid content type.
        '500':
          $ref: "#/components/responses/ServiceError"
    get:
      summary: Retrieves webhooks by thing
      description: Retrieves list of webhooks related to a certain thing identified by the provided ID.
      tags:
        - webhooks
      parameters:
        - $ref: "#/components/parameters/ThingId"
      responses:
        '200':
          $ref: "#/components/responses/ListWebhooksRes"
        '400':
          description: Failed due to malformed query parameters.
        '401':
          description: Missing or invalid access token provided.
        '403':
          description: Failed to perform authorization over the entity
        '422':
          description: Database can't process request.
        '500':
          $ref: "#/components/responses/ServiceError"
  /groups/{groupId}/webhooks:
    get:
      summary: Retrieves webhooks by group
      description: Retrieves list of webhooks related to a certain group identified by the provided ID.
      tags:
        - webhooks
      parameters:
        - $ref: "#/components/parameters/GroupId"
      responses:
        '200':
          $ref: "#/components/responses/ListWebhooksRes"
        '400':
          description: Failed due to malformed query parameters.
        '401':
          description: Missing or invalid access token provided.
        '403':
          description: Failed to perform authorization over the entity
        '422':
          description: Database can't process request.
        '500':
          $ref: "#/components/responses/ServiceError"
  /things/{thingId}/webhooks/search:
    post:
      summary: Search and retrieve webhooks by thing.
      description: |
        Retrieves a list of webhooks associated with a specific thing, with optional filtering by name and metadata.
      tags:
        - webhooks
      parameters:
        - name: thingId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/SearchWebhooksReq"
      responses:
        '200':
          $ref: "#/components/responses/WebhooksPageRes"
        '400':
          description: Failed due to malformed request body.
        '401':
          description: Missing or invalid access token provided.
        '404':
          description: Failed due to non existing thing or related entities.
        '422':
          description: Unprocessable Entity
        '500':
          $ref: "#/components/responses/ServiceError"
  /groups/{groupId}/webhooks/search:
    post:
      summary: Search and retrieve webhooks by group.
      description: |
        Retrieves a list of webhooks associated with a specific group, with optional filtering by name and metadata.
      tags:
        - webhooks
      parameters:
        - name: groupId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/SearchWebhooksReq"
      responses:
        '200':
          $ref: "#/components/responses/WebhooksPageRes"
        '400':
          description: Failed due to malformed request body.
        '401':
          description: Missing or invalid access token provided.
        '404':
          description: Failed due to non existing group or related entities.
        '422':
          description: Unprocessable Entity
        '500':
          $ref: "#/components/responses/ServiceError"
  /webhooks/{webhookId}:
    get:
      summary: Retrieves webhook info
      tags:
        - webhooks
      parameters:
        - $ref: "#/components/parameters/WebhookId"
      responses:
        '200':
          $ref: "#/components/responses/WebhookRes"
        '401':
          description: Missing or invalid access token provided.
        '404':
          description: Webhook does not exist.
        '422':
          description: Database can't process request.
        '500':
          $ref: "#/components/responses/ServiceError"
    put:
      summary: Updates webhook info
      description: |
        Update is performed by replacing the current resource data with values
        provided in a request payload. Note that the webhook's ID cannot be changed.
      tags:
        - webhooks
      parameters:
        - $ref: "#/components/parameters/WebhookId"
      requestBody:
        $ref: "#/components/requestBodies/UpdateWebhookReq"
      responses:
        '200':
          description: Webhook updated.
        '400':
          description: Failed due to malformed JSON.
        '401':
          description: Missing or invalid access token provided.
        '404':
          description: Webhook does not exist.
        '415':
          description: Missing or invalid content type.
        '500':
          $ref: "#/components/responses/ServiceError"
  /webhooks:
    patch:
      summary: Removes webhooks
      description: Removes webhooks with provided identifiers
      tags:
        - webhooks
      requestBody:
        $ref: "#/components/requestBodies/RemoveWebhookReq"
      responses:
        '204':
          description: Webhook removed.
        '400':
          description: Failed due to malformed JSON.
        '401':
          description: Missing or invalid access token provided.
        '500':
          $ref: "#/components/responses/ServiceError"

components:
  schemas:
    WebhookReqSchema:
      type: object
      properties:
        name:
          type: string
          description: Name of webhook.
        url:
          type: string
          description: The url to which the message will be forwarded.
        headers:
          type: object
          description: HTTP headers specified for the webhook.
          additionalProperties:
            type: string
      required:
        - name
        - url
    SearchWebhooksReqSchema:
      type: object
      properties:
        name:
          type: string
          description: Name filter. Filtering is performed as a case-insensitive partial match.
        metadata:
          type: object
          description: Metadata filter. Filtering is performed by matching the parameter with metadata on top level. Parameter is JSON.
        offset:
          type: integer
          description: Number of items to skip during retrieval.
          default: 0
          minimum: 0
        limit:
          type: integer
          description: Size of the subset to retrieve.
          default: 10
          maximum: 100
          minimum: 1
        order:
          type: string
          description: Order type.
          default: id
          enum:
            - name
            - id
        dir:
          type: string
          description: Order direction.
          default: desc
          enum:
            - asc
            - desc
    WebhookResSchema:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: Unique webhook identifier generated by the service.
        group_id:
          type: string
          format: uuid
          description: The group identifier refers to the group for which the webhook was created.
        name:
          type: string
          description: Name of webhook.
          example: "Test Webhook"
        url:
          type: string
          description: The url to which the message will be forwarded.
          example: "https://test.webhook.com"
        headers:
          type: object
          description: HTTP Headers specified for the webhook.
          additionalProperties:
            type: string
          example:
            Content-Type: "application/json"
      required:
        - id
        - group_id
        - name
        - url
        - headers
    WebhooksPage:
      type: object
      properties:
        webhooks:
          type: array
          minItems: 0
          uniqueItems: true
          items:
            $ref: "#/components/schemas/WebhookResSchema"
        total:
          type: integer
          description: Total number of items.
        offset:
          type: integer
          description: Number of items to skip during retrieval.
        limit:
          type: integer
          description: Maximum number of items to return in one page.
      required:
        - webhooks

  parameters:
    WebhookId:
      name: webhookId
      description: Unique webhook identifier.
      in: path
      schema:
        type: string
        format: uuid
      required: true
    GroupId:
      name: groupId
      description: Group identifier refers to the group for which the webhook is being created.
      in: path
      schema:
        type: string
        format: uuid
      required: true
    ThingId:
      name: thingId
      description: Thing identifier refers to the thing for which the webhook is being created.
      in: path
      schema:
        type: string
        format: uuid
      required: true

  requestBodies:
    CreateWebhooksReq:
      description: JSON-formatted document describing the new webhooks.
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              webhooks:
                type: array
                items:
                  $ref: "#/components/schemas/WebhookReqSchema"
    SearchWebhooksReq:
      description: JSON-formatted document describing webhook search parameters.
      required: false
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/SearchWebhooksReqSchema"
    UpdateWebhookReq:
      description: JSON-formatted document describing the updated webhook info.
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              name:
                type: string
                description: Name of webhook.
              url:
                type: string
                description: The url to which the message will be forwarded.
              headers:
                type: object
                description: HTTP headers specified for the webhook.
                additionalProperties:
                  type: string
    RemoveWebhookReq:
      description: JSON-formatted document describing the identifiers of webhooks for deleting.
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              webhook_ids:
                type: array
                items:
                  type: string
                  format: uuid

  responses:
    CreateWebhooksRes:
      description: Webhooks created.
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: "#/components/schemas/WebhookResSchema"
    WebhookRes:
      description: Data retrieved.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/WebhookResSchema"
    WebhooksPageRes:
      description: Data retrieved.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/WebhooksPage"
    ListWebhooksRes:
      description: Webhooks retrieved.
      content:
        application/json:
          schema:
            type: object
            properties:
              webhooks:
                type: array
                items:
                  $ref: "#/components/schemas/WebhookResSchema"
            required:
              - webhooks
    ServiceError:
      description: Unexpected server-side error occurred.
      content:
        application/json:
          schema:
            type: string
            format: byte

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: |
        * Users access: "Authorization: Bearer <user_token>"

security:
  - bearerAuth: [ ]
